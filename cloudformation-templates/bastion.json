{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template to create bastion host. This template is designed to run after parent template to create vpc and subnets is run (default name of parent template is vpc-and-subnet.json).",
    "Parameters": {
        "Owner": {
            "Description": "Enter Team or Individual Name Responsible for the Stack.",
            "Type": "String",
            "Default": "FirstName LastName"
        },
        "Project": {
            "Description": "Enter Project Name.",
            "Type": "String",
            "Default": "Bastion Creation"
        },
        "DeleteAfter": {
            "Description": "Enter Date It's Ok to Delete the Stack or 'Never' if meant to be persistent.",
            "Type": "String",
            "Default": "00/00/201x"
        },
        "OsType": {
            "Description": "Select OS Type for Bastion Host.",
            "Type": "String",
            "Default": "amazon",
            "AllowedValues": [
                "amazon",
                "rhel",
                "windows"
            ]
        },
        "NetworkAccessIP": {
            "Description": "Source that has SSH access to the bastion host.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.0.0.0/8",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
        },
        "PackageList": {
            "Description": "Enter Packages to install (Space Separated)",
            "Type": "String",
            "Default": "curl wget mlocate ca-certificates openssl vim git wireshark nmap awscli mysql yum-utils nfs-utils cloud-init"
        },
        "Ec2KeyPair": {
            "Description": "Select Keypair to Assign to EC2 Instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "InstanceType": {
            "Description": "Select Instance Type.",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type."
        },
        "VPCID": {
            "Description": "Id of VPC that will be used in to create this application.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "PrivateSubnets": {
            "Description": "Name of DMZ Subnets. This is where bastion hosts will reside",
            "Type": "List<AWS::EC2::Subnet::Id>"
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-west-1": {
                "AMIAmazon": "ami-824c4ee2",
                "AMIRhel": "ami-775e4f16",
                "AMIWindows": "ami-33fefd53"
            },
            "us-west-2": {
                "AMIAmazon": "ami-97785bed",
                "AMIRhel": "ami-775e4f16",
                "AMIWindows": "ami-2827f548"
            },
            "us-east-1": {
                "AMIAmazon": "ami-c481fad3",
                "AMIRhel": "ami-26ebbc5c",
                "AMIWindows": "ami-603b1c1a"
            },
            "us-east-2": {
                "AMIAmazon": "ami-f63b1193",
                "AMIRhel": "ami-26ebbc5c",
                "AMIWindows": "ami-05446e60"
            }
        },
        "bootstrap": {
            "rhel": {
                "warmebs": "echo 'ACTION: Performing EBS Warming' && dd if=/dev/xvda of=/dev/xvda conv=notrunc bs=1M status=progress",
                "yumupdate": "yum update -y",
                "installpackagelist": "yum install -y "
            }
        }
    },
    "Conditions": {
        "AmazonHost": {
            "Fn::Equals": [
                {
                    "Ref": "OsType"
                },
                "amazon"
            ]
        },
        "RhelHost": {
            "Fn::Equals": [
                {
                    "Ref": "OsType"
                },
                "rhel"
            ]
        },
        "LinuxHost": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "OsType"
                        },
                        "amazon"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "OsType"
                        },
                        "rhel"
                    ]
                }
            ]
        },
        "RhelFamily": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "OsType"
                        },
                        "amazon"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "OsType"
                        },
                        "rhel"
                    ]
                }
            ]
        },
        "WindowsHost": {
            "Fn::Equals": [
                {
                    "Ref": "OsType"
                },
                "windows"
            ]
        }
    },
    "Resources": {
        "IamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "IamPolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-instance-policy"
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:*",
                                "ec2:Describe*",
                                "elasticloadbalancing:Describe*",
                                "autoscaling:Describe*",
                                "cloudwatch:*",
                                "logs:*",
                                "sns:*"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "IamRole"
                    }
                ]
            }
        },
        "IamInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "IamRole"
                    }
                ]
            }
        },
        "BastionSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH Access to Bastion Instance",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-bastion-access"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Owner"
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "DeleteAfter",
                        "Value": {
                            "Ref": "DeleteAfter"
                        }
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::If": [
                                "LinuxHost",
                                "22",
                                "3389"
                            ]
                        },
                        "ToPort": {
                            "Fn::If": [
                                "LinuxHost",
                                "22",
                                "3389"
                            ]
                        },
                        "CidrIp": {
                            "Ref": "NetworkAccessIP"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "NetworkAccessIP"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "10.0.0.0/8"
                    }
                ]
            }
        },
        "EC2Instance1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "BastionSecurityGroup",
                "IamInstanceProfile"
            ],
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "IamInstanceProfile"
                },
                "ImageId": {
                    "Fn::If": [
                        "RhelHost",
                        {
                            "Fn::FindInMap": [
                                "RegionMap",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "AMIRhel"
                            ]
                        },
                        {
                            "Fn::If": [
                                "AmazonHost",
                                {
                                    "Fn::FindInMap": [
                                        "RegionMap",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "AMIAmazon"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "WindowsHost",
                                        {
                                            "Fn::FindInMap": [
                                                "RegionMap",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "AMIWindows"
                                            ]
                                        },
                                        "unknown"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "InstanceInitiatedShutdownBehavior": "stop",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "Ec2KeyPair"
                },
                "Monitoring": "true",
                "SecurityGroupIds": [
                    {
                        "Ref": "BastionSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Fn::Select": [
                        "0",
                        {
                            "Ref": "PrivateSubnets"
                        }
                    ]
                },
                "UserData": {
                    "Fn::If": [
                        "RhelFamily",
                        {
                            "Fn::Base64": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "#!/bin/bash\n",
                                        {
                                            "Fn::FindInMap": [
                                                "bootstrap",
                                                "rhel",
                                                "warmebs"
                                            ]
                                        },
                                        "\n",
                                        {
                                            "Fn::FindInMap": [
                                                "bootstrap",
                                                "rhel",
                                                "yumupdate"
                                            ]
                                        },
                                        "\n",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::FindInMap": [
                                                            "bootstrap",
                                                            "rhel",
                                                            "installpackagelist"
                                                        ]
                                                    },
                                                    {
                                                        "Ref": "PackageList"
                                                    },
                                                    "\n"
                                                ]
                                            ]
                                        }
                                    ]
                                ]
                            }
                        },
                        "unknown"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-bastion"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Owner"
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "DeleteAfter",
                        "Value": {
                            "Ref": "DeleteAfter"
                        }
                    }
                ]
            }
        },
        "EIP1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIPAssociation1": {
            "Type": "AWS::EC2::EIPAssociation",
            "DependsOn": [
                "EC2Instance1",
                "EIP1"
            ],
            "Properties": {
                "InstanceId": {
                    "Ref": "EC2Instance1"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP1",
                        "AllocationId"
                    ]
                }
            }
        },
        "EC2Instance2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "BastionSecurityGroup",
                "IamInstanceProfile"
            ],
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "IamInstanceProfile"
                },
                "ImageId": {
                    "Fn::If": [
                        "RhelHost",
                        {
                            "Fn::FindInMap": [
                                "RegionMap",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "AMIRhel"
                            ]
                        },
                        {
                            "Fn::If": [
                                "AmazonHost",
                                {
                                    "Fn::FindInMap": [
                                        "RegionMap",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "AMIAmazon"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "WindowsHost",
                                        {
                                            "Fn::FindInMap": [
                                                "RegionMap",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "AMIWindows"
                                            ]
                                        },
                                        "unknown"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "InstanceInitiatedShutdownBehavior": "stop",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "Ec2KeyPair"
                },
                "Monitoring": "true",
                "SecurityGroupIds": [
                    {
                        "Ref": "BastionSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Fn::Select": [
                        "1",
                        {
                            "Ref": "PrivateSubnets"
                        }
                    ]
                },
                "UserData": {
                    "Fn::If": [
                        "RhelFamily",
                        {
                            "Fn::Base64": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "#!/bin/bash\n",
                                        {
                                            "Fn::FindInMap": [
                                                "bootstrap",
                                                "rhel",
                                                "warmebs"
                                            ]
                                        },
                                        "\n",
                                        {
                                            "Fn::FindInMap": [
                                                "bootstrap",
                                                "rhel",
                                                "yumupdate"
                                            ]
                                        },
                                        "\n",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::FindInMap": [
                                                            "bootstrap",
                                                            "rhel",
                                                            "installpackagelist"
                                                        ]
                                                    },
                                                    {
                                                        "Ref": "PackageList"
                                                    },
                                                    "\n"
                                                ]
                                            ]
                                        }
                                    ]
                                ]
                            }
                        },
                        "unknown"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-bastion"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Owner"
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "DeleteAfter",
                        "Value": {
                            "Ref": "DeleteAfter"
                        }
                    }
                ]
            }
        },
        "EIP2": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIPAssociation2": {
            "Type": "AWS::EC2::EIPAssociation",
            "DependsOn": [
                "EC2Instance2",
                "EIP2"
            ],
            "Properties": {
                "InstanceId": {
                    "Ref": "EC2Instance2"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP2",
                        "AllocationId"
                    ]
                }
            }
        }
    },
    "Outputs": {
        "Owner": {
            "Description": "Team or Individual that Owns this Formation.",
            "Value": {
                "Ref": "Owner"
            }
        },
        "Project": {
            "Description": "The project name",
            "Value": {
                "Ref": "Project"
            }
        },
        "DeleteAfter": {
            "Description": "It is ok to delete the Formation after this date",
            "Value": {
                "Ref": "DeleteAfter"
            }
        },
        "PublicDns1": {
            "Description": "Bastion Public DNS Name",
            "Value": {
                "Fn::GetAtt": [
                    "EC2Instance1",
                    "PublicDnsName"
                ]
            }
        },
        "EIP1": {
            "Description": "Bastion External IP Address for bastion host 1",
            "Value": {
                "Ref": "EIP1"
            }
        },
        "PublicDns2": {
            "Description": "Bastion Public DNS Name",
            "Value": {
                "Fn::GetAtt": [
                    "EC2Instance2",
                    "PublicDnsName"
                ]
            }
        },
        "EIP2": {
            "Description": "Bastion External IP Address for bastion host 2",
            "Value": {
                "Ref": "EIP2"
            }
        },
        "OsType": {
            "Description": "OS Type.",
            "Value": {
                "Ref": "OsType"
            }
        },
        "InstanceType": {
            "Description": "Instance Type.",
            "Value": {
                "Ref": "InstanceType"
            }
        },
        "Ec2KeyPair": {
            "Description": "Key Pair used.",
            "Value": {
                "Ref": "Ec2KeyPair"
            }
        },
        "PackageList": {
            "Description": "Package List Installed",
            "Value": {
                "Ref": "PackageList"
            }
        },
        "BastionSecurityGroup": {
            "Description": "Bastion Security Group to Allow Remote Access",
            "Value": {
                "Ref": "BastionSecurityGroup"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-BastionSecurityGroup"
                }
            }
        },
        "IAMRole": {
            "Description": "IAM Instance Profile Role Created.",
            "Value": {
                "Ref": "IamRole"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Ownership"
                    },
                    "Parameters": [
                        "Owner",
                        "Project",
                        "DeleteAfter"
                    ]
                },
                {
                    "Label": {
                        "default": "Instance Settings"
                    },
                    "Parameters": [
                        "Ec2KeyPair",
                        "OsType",
                        "InstanceType",
                        "PackageList"
                    ]
                }
            ],
            "ParameterLabels": {
                "Owner": {
                    "default": "Team or Individual Owner"
                },
                "DeleteAfter": {
                    "default": "Delete After Date"
                },
                "NetworkAccessIP": {
                    "default": "Network IP to Access Bastion Host"
                },
                "OsType": {
                    "default": "OS Type"
                },
                "InstanceType": {
                    "default": "Instance Type"
                },
                "PackageList": {
                    "default": "Package List"
                }
            }
        }
    }
}