  {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template to created MSSQL RDS. This template is designed to run after parent template to create vpc and subnets is run (default name of parent template is vpc-and-subnet.json).",
    "Parameters": {
      "Owner": {
        "Description": "Enter Team or Individual Name Responsible for the Stack.",
        "Type": "String",
        "Default": "FirstName LastName"
      },
      "Project": {
        "Description": "Enter Project Name.",
        "Type": "String",
        "Default": "MSSQL RDS Creation"
      },
      "DeleteAfter": {
        "Description": "Enter Date It's Ok to Delete the Stack or 'Never' if meant to be persistent.",
        "Type": "String",
        "Default": "00/00/201x"
      },
      "DBName": {
        "Description": "The WordPress database name",
        "Type": "String",
        "Default": ""
      },
      "DBSnapshotIdentifier": {
        "Description": " The RDS MySQL snapshot name to restore to the new DB instance.",
        "Type": "String",
        "Default": ""
      },
      "MasterUsername": {
        "Description": "Database administration name. First character must be a letter and can not be 'root'.",
        "Type": "String",
        "Default": "rdsadmin"
      },
      "MasterUserPassword": {
        "NoEcho": "true",
        "Description": "Database administration password. Minimum of 8 alphanumeric characters (pattern of [a-zA-Z0-9]).",
        "Type": "String",
        "MinLength": "8",
        "AllowedPattern": "[a-zA-Z0-9!?]*",
        "ConstraintDescription": "Must only contain upper and lowercase letters and numbers"
      },
      "BackupRetentionPeriod": {
        "Description": "Enter Backup Retention Period in Days.",
        "Type": "Number",
        "Default": "7"
      },
      "MultiAvailabilityZone": {
        "Description": "Enable Multi Availability Zones?",
        "Type": "String",
        "Default": "true",
        "AllowedValues": [
          "true",
          "false"
        ]
      },
      "TcpPort": {
        "Description": "Enter RDS Listening TCP Port number.",
        "Type": "Number",
        "Default": "1433"
      },
      "DatabaseSNSNotification": {
        "Description": "Enter Alert Notification SNS Topic ARN for RDS.",
        "Type": "String",
        "Default": "arn:aws:sns:us-east-1:912667018957:RDSNotifications"
      },
      "PreferredBackupWindow": {
        "Description": "Enter Preferred Backup Window Time (UTC).",
        "Type": "String",
        "Default": "17:00-19:00"
      },
      "PreferredMaintenanceWindow": {
        "Description": "Enter Preferred Maintenance Window Time (UTC).",
        "Type": "String",
        "Default": "Sun:19:00-Sun:23:00"
      },
      "LicenseModel": {
        "Description": "License Model.",
        "Type": "String",
        "Default": "license-included"
      },
      "AllocatedStorage": {
        "Default": "5",
        "Description": "The size of the database (Gb)",
        "Type": "Number",
        "MinValue": "5",
        "MaxValue": "6144",
        "ConstraintDescription": "Must be between 5-6144"
      },
      "ConfigureProvisionedIops": {
        "Description": "Provisioned IOPS for RDS.",
        "Type": "String",
        "Default": "false",
        "AllowedValues": [
          "true",
          "false"
        ]
      },
      "ProvisionedIopsValue": {
        "Description": "(Skip if Not Using Provisioned IOPS) Set Provisioned IOPS 1000-30000.",
        "Type": "Number",
        "Default": "1000",
        "MinValue": "1000",
        "MaxValue": "30000"
      },
      "SnapshotOnDelete": {
        "Description": "Create a Snapshot on Delete?",
        "Type": "String",
        "Default": "true",
        "AllowedValues": [
          "true",
          "false"
        ]
      },
      "AutoMinorVersionUpgrade": {
        "Description": "Allow Automatic Minor Version Upgrades?",
        "Type": "String",
        "Default": "true",
        "AllowedValues": [
          "true",
          "false"
        ]
      },
      "SetupAlarms": {
        "Description": "Setup Cloudwatch Alarms?",
        "Type": "String",
        "Default": "true",
        "AllowedValues": [
          "true",
          "false"
        ]
      },
      "DatabaseInstanceType": {
        "Description": "Select Instance Type.",
        "Type": "String",
        "Default": "db.m4.large",
        "AllowedValues": [
          "db.t1.micro",
          "db.t2.micro",
          "db.t2.small",
          "db.t2.medium",
          "db.t2.large",
          "db.m1.small",
          "db.m1.medium",
          "db.m1.large",
          "db.m1.xlarge",
          "db.m3.medium",
          "db.m3.large",
          "db.m3.xlarge",
          "db.m3.2xlarge",
          "db.m4.large",
          "db.m4.xlarge",
          "db.m4.2xlarge",
          "db.m4.4xlarge",
          "db.m4.10xlarge",
          "db.r3.large",
          "db.r3.xlarge",
          "db.r3.2xlarge",
          "db.r3.4xlarge",
          "db.r3.8xlarge"
        ],
        "ConstraintDescription": "Must be a valid EC2 instance type."
      },
      "VPCID": {
        "Description": "Id of VPC that will be used in to create this application.",
        "Type": "AWS::EC2::VPC::Id"
      },
      "PrivateSubnets": {
        "Description": "Name of Public Subnets. This is where ec2 instances will reside",
        "Type": "List<AWS::EC2::Subnet::Id>"
      },
      "DatabaseSecurityGroups": {
        "Description": "Name of Security Groups used by EC2 from which RDS can be accessed.",
        "Type": "String",
        "Default": ""
      }
    },
    "Mappings": {
      "Settings": {
        "MSSQL": {
          "Engine": "sqlserver-se",
          "Version": "11.00"
        }
      }
    },
    "Conditions": {
      "ConfigureAlarms": {
        "Fn::Equals": [
          {
            "Ref": "SetupAlarms"
          },
          "true"
        ]
      },
      "ConfigureSnapshotOnDelete": {
        "Fn::Equals": [
          {
            "Ref": "SnapshotOnDelete"
          },
          "true"
        ]
      },
      "UserSuppliedSG": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              {
                "Ref": "DatabaseSecurityGroups"
              },
              ""
            ]
          }
        ]
      },
      "UseDbSnapshot": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              {
                "Ref": "DBSnapshotIdentifier"
              },
              ""
            ]
          }
        ]
      }
    },
    "Resources": {
      "RDSAccessSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Instance to RDS Access",
          "VpcId": {
            "Ref": "VPCID"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::StackName"
                    },
                    "-rds"
                  ]
                ]
              }
            },
            {
              "Key": "Owner",
              "Value": {
                "Ref": "Owner"
              }
            },
            {
              "Key": "Project",
              "Value": {
                "Ref": "Project"
              }
            },
            {
              "Key": "DeleteAfter",
              "Value": {
                "Ref": "DeleteAfter"
              }
            }
          ]
        }
      },
      "AccessSecurityGroupIngress": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "DependsOn": "RDSAccessSecurityGroup",
        "Properties": {
          "GroupId": {
            "Ref": "RDSAccessSecurityGroup"
          },
          "IpProtocol": "tcp",
          "FromPort": {
            "Ref": "TcpPort"
          },
          "ToPort": {
            "Ref": "TcpPort"
          },
          "SourceSecurityGroupId": {
            "Ref": "RDSAccessSecurityGroup"
          }
        }
      },
      "DbSubnetGroup": {
        "Type": "AWS::RDS::DBSubnetGroup",
        "Properties": {
          "DBSubnetGroupDescription": {
            "Fn::Join": [
              "",
              [
                "RDS Subnet Group for ",
                {
                  "Ref": "AWS::StackName"
                }
              ]
            ]
          },
          "SubnetIds": [
            {
              "Fn::Select": [
                "0",
                {
                  "Ref": "PrivateSubnets"
                }
              ]
            },
            {
              "Fn::Select": [
                "1",
                {
                  "Ref": "PrivateSubnets"
                }
              ]
            }
          ],
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Ref": "AWS::StackName"
              }
            },
            {
              "Key": "Owner",
              "Value": {
                "Ref": "Owner"
              }
            },
            {
              "Key": "Project",
              "Value": {
                "Ref": "Project"
              }
            },
            {
              "Key": "DeleteAfter",
              "Value": {
                "Ref": "DeleteAfter"
              }
            }
          ]
        }
      },
      "DbInstance": {
        "Type": "AWS::RDS::DBInstance",
        "DeletionPolicy": "Snapshot",
        "DependsOn": [
          "DbSubnetGroup",
          "RDSAccessSecurityGroup"
        ],
        "Properties": {
          "AllocatedStorage": {
            "Ref": "AllocatedStorage"
          },
          "AllowMajorVersionUpgrade": "false",
          "AutoMinorVersionUpgrade": {
            "Ref": "AutoMinorVersionUpgrade"
          },
          "BackupRetentionPeriod": {
            "Ref": "BackupRetentionPeriod"
          },
          "DBInstanceClass": {
            "Ref": "DatabaseInstanceType"
          },
          "DBInstanceIdentifier": {
            "Ref": "AWS::StackName"
          },
          "DBSubnetGroupName": {
            "Ref": "DbSubnetGroup"
          },
          "DBName": {
            "Fn::If": [
              "UseDbSnapshot",
              {
                "Ref": "AWS::NoValue"
              },
              {
                "Ref": "DBName"
              }
            ]
          },
          "DBSnapshotIdentifier": {
            "Fn::If": [
              "UseDbSnapshot",
              {
                "Ref": "DBSnapshotIdentifier"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          "Engine": {
            "Fn::FindInMap": [
              "Settings",
              "MSSQL",
              "Engine"
            ]
          },
          "EngineVersion": {
            "Fn::FindInMap": [
              "Settings",
              "MSSQL",
              "Version"
            ]
          },
          "LicenseModel": {
            "Ref": "LicenseModel"
          },
          "MasterUsername": {
            "Ref": "MasterUsername"
          },
          "MasterUserPassword": {
            "Ref": "MasterUserPassword"
          },
          "MultiAZ": {
            "Ref": "MultiAvailabilityZone"
          },
          "Port": {
            "Ref": "TcpPort"
          },
          "PreferredBackupWindow": {
            "Ref": "PreferredBackupWindow"
          },
          "PreferredMaintenanceWindow": {
            "Ref": "PreferredMaintenanceWindow"
          },
          "PubliclyAccessible": "false",
          "StorageEncrypted": "true",
          "StorageType": "gp2",
          "VPCSecurityGroups": [
            {
              "Fn::If": [
                "UserSuppliedSG",
                {
                  "Ref": "DatabaseSecurityGroups"
                },
                {
                  "Ref": "RDSAccessSecurityGroup"
                }
              ]
            }
          ],
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Ref": "AWS::StackName"
              }
            },
            {
              "Key": "Owner",
              "Value": {
                "Ref": "Owner"
              }
            },
            {
              "Key": "Project",
              "Value": {
                "Ref": "Project"
              }
            },
            {
              "Key": "DeleteAfter",
              "Value": {
                "Ref": "DeleteAfter"
              }
            }
          ]
        }
      },
      "AlarmCpu": {
        "Condition": "ConfigureAlarms",
        "Type": "AWS::CloudWatch::Alarm",
        "DependsOn": [
          "DbInstance"
        ],
        "Properties": {
          "AlarmActions": [
            {
              "Ref": "DatabaseSNSNotification"
            }
          ],
          "AlarmDescription": "CPU Utilization on RDS Instance is too high",
          "ComparisonOperator": "GreaterThanOrEqualToThreshold",
          "Dimensions": [
            {
              "Name": "DBInstanceIdentifier",
              "Value": {
                "Ref": "DbInstance"
              }
            }
          ],
          "EvaluationPeriods": "1",
          "MetricName": "CPUUtilization",
          "Namespace": "AWS/RDS",
          "Period": "300",
          "Statistic": "Average",
          "Threshold": "70"
        }
      },
      "AlarmFreeSpace": {
        "Condition": "ConfigureAlarms",
        "Type": "AWS::CloudWatch::Alarm",
        "DependsOn": [
          "DbInstance"
        ],
        "Properties": {
          "AlarmActions": [
            {
              "Ref": "DatabaseSNSNotification"
            }
          ],
          "AlarmDescription": "1Gb left of storage available on RDS Instance",
          "ComparisonOperator": "LessThanOrEqualToThreshold",
          "Dimensions": [
            {
              "Name": "DBInstanceIdentifier",
              "Value": {
                "Ref": "DbInstance"
              }
            }
          ],
          "EvaluationPeriods": "1",
          "MetricName": "FreeStorageSpace",
          "Namespace": "AWS/RDS",
          "Period": "300",
          "Statistic": "Maximum",
          "Threshold": "1024000000"
        }
      }
    },
    "Outputs": {
      "Owner": {
        "Description": "Team or Individual that Owns this Formation.",
        "Value": {
          "Ref": "Owner"
        }
      },
      "Project": {
        "Description": "The project name",
        "Value": {
          "Ref": "Project"
        }
      },
      "VPC": {
        "Description": "VPC Used",
        "Value": {
          "Ref": "VPCID"
        }
      },
      "RDSHostname": {
        "Description": "RDS Hostname",
        "Value": {
          "Fn::GetAtt": [
            "DbInstance",
            "Endpoint.Address"
          ]
        }
      },
      "RDSPort": {
        "Description": "RDS Port",
        "Value": {
          "Fn::GetAtt": [
            "DbInstance",
            "Endpoint.Port"
          ]
        }
      },
      "DbSubnetGroup": {
        "Description": "DB Subnet Group Created.",
        "Value": {
          "Ref": "DbSubnetGroup"
        }
      },
      "RDSAccessSecurityGroup": {
        "Description": "RDS Access Security Group Created.",
        "Value": {
          "Ref": "RDSAccessSecurityGroup"
        }
      },
      "AlarmCpu": {
        "Condition": "ConfigureAlarms",
        "Description": "CPU Alarm Created for RDS Instance/s.",
        "Value": {
          "Ref": "AlarmCpu"
        }
      },
      "AlarmFreeSpace": {
        "Condition": "ConfigureAlarms",
        "Description": "Disk Free Space Alarm Created for RDS Instance/s.",
        "Value": {
          "Ref": "AlarmFreeSpace"
        }
      },
      "BackupRetentionPeriod": {
        "Description": "Backup Retention Period in Days",
        "Value": {
          "Ref": "BackupRetentionPeriod"
        }
      },
      "MultiAvailabilityZone": {
        "Description": "Enable Multi Availability Zones?",
        "Value": {
          "Ref": "MultiAvailabilityZone"
        }
      },
      "SnapshotOnDelete": {
        "Description": "Create Snapshot on Delete?",
        "Value": {
          "Ref": "SnapshotOnDelete"
        }
      },
      "DatabaseSNSNotification": {
        "Description": "SNS Topic ARN for Alerts",
        "Value": {
          "Ref": "DatabaseSNSNotification"
        }
      },
      "PreferredBackupWindow": {
        "Description": "Preferred Backup Window",
        "Value": {
          "Ref": "PreferredBackupWindow"
        }
      },
      "PreferredMaintenanceWindow": {
        "Description": "Preferred Maintenance Window",
        "Value": {
          "Ref": "PreferredMaintenanceWindow"
        }
      },
      "AllocatedStorage": {
        "Description": "Allocated Storage in GB",
        "Value": {
          "Ref": "AllocatedStorage"
        }
      },
      "ConfigureProvisionedIops": {
        "Description": "Configure Provisioned IOPS?",
        "Value": {
          "Ref": "ConfigureProvisionedIops"
        }
      },
      "DeleteAfter": {
        "Description": "It is ok to delete the Formation after this date",
        "Value": {
          "Ref": "DeleteAfter"
        }
      }
    },
    "Metadata": {
      "AWS::CloudFormation::Interface": {
        "ParameterGroups": [
          {
            "Label": {
              "default": "Ownership"
            },
            "Parameters": [
              "Owner",
              "Project",
              "DeleteAfter"
            ]
          },
          {
            "Label": {
              "default": "RDS Configuration"
            },
            "Parameters": [
              "DatabaseInstanceType",
              "LicenseModel",
              "MasterUsername",
              "MasterUserPassword",
              "BackupRetentionPeriod",
              "PreferredBackupWindow",
              "PreferredMaintenanceWindow",
              "SnapshotOnDelete",
              "AllocatedStorage",
              "ConfigureProvisionedIops",
              "ProvisionedIopsValue",
              "AutoMinorVersionUpgrade",
              "TcpPort",
              "MultiAvailabilityZone"
            ]
          },
          {
            "Label": {
              "default": "CloudWatch Monitoring"
            },
            "Parameters": [
              "SetupAlarms",
              "DatabaseSNSNotification"
            ]
          },
          {
            "Label": {
              "default": "VPC and Ingress Security Groups"
            },
            "Parameters": [
              "DatabaseSecurityGroups",
              "VPCID",
              "PrivateSubnets"
            ]
          }
        ],
        "ParameterLabels": {
          "Owner": {
            "default": "Team or Individual Owner"
          },
          "DeleteAfter": {
            "default": "Delete After Date"
          },
          "DatabaseInstanceType": {
            "default": "Instance Type"
          },
          "DatabaseSNSNotification": {
            "default": "Alert SNS Topic ARN"
          },
          "MasterUsername": {
            "default": "Master Username"
          },
          "MasterUserPassword": {
            "default": "Master User Password"
          },
          "BackupRetentionPeriod": {
            "default": "Backup Retention Period"
          },
          "PreferredBackupWindow": {
            "default": "Preferred Backup Window"
          },
          "PreferredMaintenanceWindow": {
            "default": "Preferred Maintenance Window"
          },
          "AllocatedStorage": {
            "default": "Allocated Storage"
          },
          "ConfigureProvisionedIops": {
            "default": "Configure Provisioned IOPS?"
          },
          "ProvisionedIopsValue": {
            "default": "Provisioned IOPS Value"
          },
          "AutoMinorVersionUpgrade": {
            "default": "Auto Minor Version Upgrade"
          },
          "TcpPort": {
            "default": "TCP Port"
          },
          "MultiAvailabilityZone": {
            "default": "Multi Availability Zone?"
          },
          "SetupAlarms": {
            "default": "Setup Alarms?"
          },
          "SnapshotOnDelete": {
            "default": "Snapshot On Delete?"
          }
        }
      }
    }
  }