{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CFN-template to create site-to-site VPN for IFI. Use this template only if vpn connection to datacenter is needed.",
  "Parameters": {
    "Owner": {
      "Description": "Enter Team or Individual Name Responsible for the Stack.",
      "Type": "String",
      "Default": "FirstName LastName"
    },
    "Project": {
      "Description": "Enter Project Name.",
      "Type": "String",
      "Default": "VPN Creation"
    },
    "DeleteAfter": {
      "Description": "Enter Date It's Ok to Delete the Stack or 'Never' if meant to be persistent.",
      "Type": "String",
      "Default": "00/00/201x"
    },
    "RemoteVpnDeviceIp": {
      "Description": "Enter External IP Address of the Customer VPN Device.",
      "Type": "String",
      "MinLength": "7",
      "MaxLength": "15",
      "Default": "208.88.148.29",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "Must be a valid IP Address x.x.x.x"
    },
    "RemoteNetworkCidr": {
      "Description": "Enter Remote Network IP Range CIDR (i.e. 192.168.100.0/24).",
      "Type": "String",
      "MinLength": "11",
      "MaxLength": "18",
      "Default": "10.128.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid CIDR range of the form x.x.x.x/x."
    },
    "VPCStackName": {
      "Description": "Name of an active CloudFormation stack that contains the vpc and subnets, that will be used in this stack.",
      "Type": "String",
      "MinLength": 1,
      "MaxLength": 255,
      "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
      "Default": "vpc-and-subnets"
    }
  },
  "Resources": {
    "VPNGateway": {
      "Type": "AWS::EC2::VPNGateway",
      "Properties": {
        "Type": "ipsec.1",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "VPNGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${VPCStackName}-VPCID"
          }
        },
        "VpnGatewayId": {
          "Ref": "VPNGateway"
        }
      }
    },
    "CustomerGateway": {
      "Type": "AWS::EC2::CustomerGateway",
      "Properties": {
        "Type": "ipsec.1",
        "BgpAsn": "65000",
        "IpAddress": {
          "Ref": "RemoteVpnDeviceIp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          },
          {
            "Key": "VPN",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Gateway to ",
                  {
                    "Ref": "RemoteVpnDeviceIp"
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "VPNConnection": {
      "Type": "AWS::EC2::VPNConnection",
      "DependsOn": [
        "CustomerGateway",
        "VPNGateway"
      ],
      "Properties": {
        "Type": "ipsec.1",
        "StaticRoutesOnly": "True",
        "CustomerGatewayId": {
          "Ref": "CustomerGateway"
        },
        "VpnGatewayId": {
          "Ref": "VPNGateway"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          },
          {
            "Key": "VPN",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Connection to ",
                  {
                    "Ref": "RemoteNetworkCidr"
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "StaticRoute": {
      "DependsOn": [
        "VPNConnection"
      ],
      "Type": "AWS::EC2::VPNConnectionRoute",
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "RemoteNetworkCidr"
        },
        "VpnConnectionId": {
          "Ref": "VPNConnection"
        }
      }
    },
    "PrivateRoute": {
      "DependsOn": [
        "VPNConnection"
      ],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "RemoteNetworkCidr"
        },
        "GatewayId": {
          "Ref": "VPNGateway"
        },
        "RouteTableId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${VPCStackName}-PrivateRouteTable"
          }
        }
      }
    },
    "InboundPrivateNetworkAclEntryOfficeNetwork": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${VPCStackName}-PrivateNACL"
          }
        },
        "RuleNumber": "230",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "RemoteNetworkCidr"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "VPNGatewayToOnPrem": {
      "Type": "AWS::EC2::VPNGatewayRoutePropagation",
      "DependsOn": [
        "VPNConnection"
      ],
      "Properties": {
        "RouteTableIds": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${VPCStackName}-PrivateRouteTable"
            }
          }
        ],
        "VpnGatewayId": {
          "Ref": "VPNGateway"
        }
      }
    }
  },
  "Outputs": {
    "Owner": {
      "Description": "Team or Individual that Owns this Formation.",
      "Value": {
        "Ref": "Owner"
      }
    },
    "Project": {
      "Description": "The project name",
      "Value": {
        "Ref": "Project"
      }
    },
    "VPC": {
      "Description": "VPC Used",
      "Value": {
        "Fn::ImportValue": {
          "Fn::Sub": "${VPCStackName}-VPCID"
        }
      }
    },
    "RemoteVpnDeviceIp": {
      "Description": "Remote VPN Device IP Used.",
      "Value": {
        "Ref": "RemoteVpnDeviceIp"
      }
    },
    "RemoteNetworkCidr": {
      "Description": "Remote Network CIDR Used.",
      "Value": {
        "Ref": "RemoteNetworkCidr"
      }
    },
    "DeleteAfter": {
      "Description": "It is ok to delete the Formation after this date",
      "Value": {
        "Ref": "DeleteAfter"
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Ownership"
          },
          "Parameters": [
            "Owner",
            "Project",
            "DeleteAfter"
          ]
        },
        {
          "Label": {
            "default": "Remote Network Configuration"
          },
          "Parameters": [
            "RemoteVpnDeviceIp",
            "RemoteNetworkCidr",
            "RemoteBgpAsn"
          ]
        },
        {
          "Label": {
            "default": "Master Templates"
          },
          "Parameters": [
            "VPCStackName"
          ]
        }
      ],
      "ParameterLabels": {
        "Owner": {
          "default": "Team or Individual Owner"
        },
        "DeleteAfter": {
          "default": "Delete After Date"
        },
        "RemoteVpnDeviceIp": {
          "default": "VPN Device IP"
        },
        "RemoteNetworkCidr": {
          "default": "Network CIDR Block"
        },
        "RemoteBgpAsn": {
          "default": "VPN Device BGP ASN"
        }
      }
    }
  }
}