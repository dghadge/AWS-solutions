---
Description: "Template to RDS with username/password in SecretsManager"

Parameters:
  pRotationLambdaARN:
    Type: String
    Description: ARN of your rotation Lambda function.
  pDBInstanceClass:
    Type: String
    Description: 'RDS instance size/class'

Resources:
# Create a secret with the username admin and a randomly generated password in JSON.  
  MyRDSInstanceRotationSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'Username/Password for the RDS instance'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'

# Create a MySQL database.
# The secret (username and password for the superuser) will be dynamically 
# referenced. This ensures CloudFormation will not log or persist the resolved value. 
  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: !Ref pDBInstanceClass
      Engine: mysql
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref MyRDSInstanceRotationSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MyRDSInstanceRotationSecret, ':SecretString:password}}' ]]
      BackupRetentionPeriod: 0
      DBInstanceIdentifier: 'rotation-instance'

# To enbale rotation, update the referenced secret with properties of the RDS database.
  SecretRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref MyRDSInstanceRotationSecret
      TargetId: !Ref MyDBInstance
      TargetType: AWS::RDS::DBInstance

# Schedule rotating the secret every 30 days. 
# Note, the first rotation is triggered immediately. 
# This enables you to verify that rotation is configured appropriately.
# Subsequent rotations are scheduled according to the configured rotation. 
# This example assumes that you have previously created a Lambda function to rotate secrets of this type.
# Replace <% replace-with-lambda-arn %> with the ARN of your rotation Lambda function.  
# For details about rotation Lambdas, see:
# https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html
  MySecretRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    DependsOn: SecretRDSInstanceAttachment
    Properties:
      SecretId: !Ref MyRDSInstanceRotationSecret
      # Remember to update this place holder with the ARN of your rotation lambda
      RotationLambdaARN: !Ref pRotationLambdaARN
      RotationRules:
        AutomaticallyAfterDays: 30
